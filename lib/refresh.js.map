{"version":3,"sources":["../src/refresh.js"],"names":["refresh","ele","cof","Error","obj","config","maxDistance","refreshDistance","statusChange","callback","direction","currentSt","childDown","querySelector","childUp","indicatorEle","isUp","isDown","isLock","startY","touchstart","event","touches","screenY","downHeight","moving","touchmove","preventDefault","scrollTop","diff","Math","round","touchend","downLoading","setTimeout","clientHeight","upLoading","startTop","lastClientHeight","scroll","bottomDistance","scrollHeight","style","visibility","eventList","disableFull","fullLoad","init","console","log","key","addEventListener","willPreventDefault","notPreventDefault","destory","removeEventListener","endSuccess","lockScroll","flag","resetScroll"],"mappings":"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","sourcesContent":["import {\n  isElement,\n  setHeight,\n  setTransition,\n  dampingDiff,\n  willPreventDefault,\n  notPreventDefault,\n  isFull,\n} from './utils';\n\nfunction refresh(ele, cof = {}) {\n  if (!isElement(ele)) {\n    // 不是dom元素\n    throw new Error('m-pull-refresh need a dom element like div,not ' + typeof obj);\n  }\n  const config = Object.assign(\n    {\n      maxDistance: 200,\n      refreshDistance: 40,\n      statusChange: () => {},\n      callback: () => {},\n      direction: 'up',\n    },\n    cof,\n  );\n  let currentSt = '';\n  const childDown = ele.querySelector(`.godz-pr-down`);\n  const childUp = ele.querySelector(`.godz-pr-up`);\n  const indicatorEle = ele.querySelector('.godz-pr-text');\n  const isUp = config.direction === 'both' || config.direction === 'up';\n  const isDown = config.direction === 'both' || config.direction === 'down';\n  /**\n   * 是否锁定下拉刷新，上拉加载\n   * true 锁定\n   */\n  let isLock = false;\n\n  let startY = null;\n  function touchstart(event) {\n    startY = event.touches[0].screenY;\n  }\n\n  let downHeight = 0;\n  let moving = false;\n  function touchmove(event) {\n    if (isLock) return;\n\n    const screenY = event.touches[0].screenY;\n    // 直接阻止默认事件，防止警告\n    if (moving) event.preventDefault();\n\n    if (!moving && startY > screenY && isDown) {\n      return;\n    }\n\n    if (currentSt === 'release') {\n      // 正在加载的时候，阻止默认事件，并返回\n      return event.preventDefault();\n    }\n\n    if (ele.scrollTop > 0) {\n      return;\n    }\n    moving = true;\n    event.preventDefault();\n\n    let diff = Math.round(screenY - startY);\n\n    startY = screenY;\n    // 设置过度效果\n    setTransition(childDown, true);\n    downHeight += dampingDiff(diff, config.maxDistance, downHeight);\n    setHeight(childDown, downHeight);\n    if (downHeight < config.refreshDistance) {\n      if (currentSt !== 'deactivate') {\n        currentSt = 'deactivate';\n        config.statusChange('deactivate');\n      }\n    } else {\n      if (currentSt !== 'activate') {\n        currentSt = 'activate';\n        config.statusChange('activate');\n      }\n    }\n  }\n\n  function touchend() {\n    if (currentSt === 'activate') {\n      downLoading = true;\n      setTransition(childDown, false);\n      startY = null;\n      currentSt = 'release';\n      config.statusChange('release');\n      setTimeout(() => {\n        // 获取 indicator高度\n        setHeight(childDown, indicatorEle.clientHeight);\n      }, 0);\n      config.callback();\n    } else if (currentSt === 'deactivate') {\n      startY = null;\n      setTransition(childDown, false);\n      setHeight(childDown, 0);\n    }\n    downHeight = 0;\n    moving = false;\n  }\n\n  let upLoading = false;\n  let startTop = null;\n  let lastClientHeight = null;\n  /**\n   * 监听滚动事件，判断到底触发刷新\n   */\n  function scroll() {\n    if (upLoading || isLock) return;\n\n    if (startTop === null) {\n      startTop = ele.scrollTop;\n      return;\n    }\n\n    // 必须是向下滚动才行，方向不能错\n    if (startTop >= ele.scrollTop) {\n      startTop = null;\n      return;\n    }\n\n    const bottomDistance = ele.scrollHeight - ele.scrollTop - ele.clientHeight;\n    if (bottomDistance > 100) {\n      // 没到到触发距离\n      return;\n    }\n    upLoading = true;\n    childUp.style.visibility = 'visible';\n    config.callback();\n  }\n\n  const eventList = {\n    touchstart,\n    touchmove,\n    touchend,\n  };\n\n  let disableFull = false;\n  /**\n   * 满屏加载\n   */\n  function fullLoad() {\n    if (!isFull(ele)) {\n      // 已经超过一屏了\n      disableFull = true;\n      return;\n    }\n    config.callback();\n  }\n\n  function init() {\n    console.log('scroll init');\n\n    if (isDown) {\n      for (const key of Object.keys(eventList)) {\n        ele.addEventListener(key, eventList[key], willPreventDefault);\n      }\n    }\n\n    if (isUp) {\n      ele.addEventListener('scroll', scroll, notPreventDefault);\n    }\n    fullLoad();\n  }\n  function destory() {\n    if (isDown) {\n      for (const key of Object.keys(eventList)) {\n        ele.removeEventListener(key, eventList[key]);\n      }\n    }\n    if (isUp) {\n      ele.removeEventListener('scroll', scroll);\n    }\n  }\n  return {\n    destory,\n    endSuccess() {\n      // 加载结束回调，隐藏loading状态\n      if (isUp) {\n        childUp.style.visibility = 'hidden';\n        upLoading = false;\n        startTop = null;\n      }\n\n      if (isDown) {\n        currentSt = 'finish';\n        config.statusChange('finish');\n        setHeight(childDown, 0);\n      }\n      if (!disableFull) {\n        setTimeout(() => {\n          fullLoad();\n        }, 10);\n      }\n    },\n    init,\n    lockScroll(flag) {\n      console.log(`设置lock:${flag}`);\n      isLock = flag;\n    },\n    resetScroll() {\n      // 重置内部状态，通常用于tab切换\n      console.log('resetScroll');\n\n      // 重新判断是否满屏\n      disableFull = false;\n      setTimeout(() => {\n        fullLoad();\n      }, 10);\n    },\n  };\n}\n\nexport default refresh;\n"],"file":"refresh.js"}